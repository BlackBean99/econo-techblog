scalar Void

type Post{
    id:ID!
    userId:Int
    content:String
    title:String!
    official:Boolean!
    views:Int!
    hearts:Int!
    mainCategory: MainCategory
}

type Heart{
    Id:ID!
    userId:Int
    post:Post
}

enum Role{
    ADMIN
    USER
    GUEST
}

enum MainCategory{
    TECH
    CULTURE
    TROUBLE_SHOOTING
}

type Category{
    Id : ID!
    Post : Post
    categoryName :String
}

input PostCreateRequestDto{
    userId:Int
    content: String
    title: String
    mainCategory:MainCategory
    categorySplitByComma:String
}

type PostCreateResponseDto{
    userId: Int
    content: String
    title: String
    mainCategory: MainCategory
    categorySplitByComma: String
    createdDate: String
}

input PostUpdateRequestDto{
    content: String
    title: String
    category: String
}

type PostUpdateResponseDto{
    userId: Int
    content: String
    title: String
    category: String
    views: Int
    likes: Int
    createdDate : String
    modifiedDate: String
}
#input Post{
#    Id:ID!
#    userId:Int
#    content:String
#    official:Boolean!
#    title:String!
#    views:Int!
#    hearts:Int!
#    mainCategory: MainCategory
#}

input HeartRequestDto {
    id:ID
    postId : Int
    userId:Int
}

# 타입 시스템 정의
schema {
#    query: Query
    mutation: Mutation,
}

#Root Query
type Query{
    #    -----------Post------------------------f------
    findAllPosts(mainCategory : MainCategory): [Post!]!
    findPostByPostId(id : Int) : Post!

    #    ---------Comment--------------------
}

#Root Mutation
type Mutation{
    #    -----------Post------------------------------
    createPost(postCreateRequestDto: PostCreateRequestDto): PostCreateResponseDto!,
#    updatePost(postId: ID, postUpdateRequestDto: PostUpdateRequestDto): PostUpdateResponseDto!,
#    deletePost(postId : ID):Boolean,
#    createOfficial(postID: ID): [Post!]!,
#
#    #    -----------Heart------------------------------
#    updateHeartState(heartRequestDto:HeartRequestDto): Int!
#
#    #    -----------Comment------------------------------
#
}
